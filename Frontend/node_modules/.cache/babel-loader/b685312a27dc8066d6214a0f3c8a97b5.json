{"ast":null,"code":"var _jsxFileName = \"/Users/vrushalij/Desktop/Submission/css_updated/Frontend/src/Welcome.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UserStorage from './stores/UserStorage';\nimport VoterContract from './VoterContract';\nimport swal from \"sweetalert2\";\nimport Candidate from \"./Candidate\";\nimport Loader from \"react-loader-spinner\";\nimport web3 from './web3';\nimport { Link, Redirect } from 'react-router-dom';\nimport './App.css';\nconst style = {\n  width: \"30%\",\n  marginLeft: \"0%\",\n  height: \"50px\",\n  marginTop: \"40px\",\n  marginBottom: \"30px\",\n  fontSize: \"20px\",\n  border: \"none\",\n  borderRight: \"solid #2eca6a 3px\",\n  borderBottom: \"solid #2eca6a 3px\",\n  borderTop: \"solid 3px lightgrey\",\n  borderLeft: \"solid 3px lightgrey\"\n};\n\nclass Welcome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showDetails = candidate_id => {\n      if (candidate_id) {\n        const candidate = this.state.candidates.filter(candidate => candidate.candidate_id === candidate_id);\n        this.props.history.push({\n          pathname: \"/CandidateDetail\",\n          state: {\n            candidateDetails: candidate\n          }\n        });\n      }\n    };\n\n    this.state = {\n      candidates: [],\n      candidate_id: 0,\n      max_id: '',\n      loading: true,\n      success: null,\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n    this.handleCandidateChange = this.handleCandidateChange.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  doLogout() {\n    UserStorage.username = '';\n    this.props.history.push(\"/Login\");\n  }\n\n  async componentDidMount() {\n    const response = await fetch('http://localhost:3003/candidateCount', {\n      method: 'get',\n      headers: {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    });\n    let result = await response.json();\n    console.log(\"response data is\", result.data[0]);\n    var countfromdb = result.data[0].count;\n    console.log(\"count is: \" + countfromdb); // var accounts = await web3.eth.getAccounts();\n    // console.log(\"web3\", accounts);\n    // console.log(\"aing: \"+ accounts[0]);\n    // web3.eth.defaultAccount = accounts[0];\n    // const candidates = await VoterContract.methods.getCandidates(count).call();\n    // console.log(\"number of responses: \"+candidates.length)\n    // console.log(\"Got the candidate information from blockchain: \"+ JSON.stringify(candidates[2]));\n    // //const candi = await VoterContract.methods.getCandidates(3).call();\n    // let candidates2 = [];\n    // for (let candidate of candidates) {\n    //   if (candidate.id != \"0\") {\n    //     candidates2.push({\n    //       candidate_id: candidate.candidate_id,\n    //       first_name: candidate.first_name,\n    //       last_name: candidate.last_name,\n    //       candidate_info: candidate.candidate_info,\n    //       candidate_desc: candidate.candidate_desc,\n    //       vote_count: candidate.vote_count\n    //     });\n    //   }\n    // }\n    // this.setState({ candidates: candidates2, loading: false });\n  }\n\n  handleCandidateChange(event) {\n    this.setState({\n      candidate_id: event.target.value\n    });\n  }\n\n  async vote() {\n    console.log(this.state.candidate_id);\n\n    if (this.state.candidate_id !== 0) {\n      var accounts = await web3.eth.getAccounts();\n      console.log(\"web3\", accounts);\n      console.log(\"aing: \" + accounts[0]);\n      web3.eth.defaultAccount = accounts[0];\n      var result = await VoterContract.methods.vote(this.state.candidate_id).send({\n        from: accounts[0]\n      });\n      console.log(\"result\" + JSON.stringify(result[0]));\n\n      if (result[0] == 1) {\n        swal.fire({\n          icon: 'success',\n          title: \"Voting SuccesFull!\",\n          text: \"You have succesfully voted your candidate\",\n          type: \"Success\",\n          confirmButtonText: \"OK\"\n        });\n      } else {\n        swal.fire({\n          icon: 'error',\n          title: 'Voting failed',\n          text: 'Vote from this metamask address has already been casted',\n          confirmButtonText: \"OK\"\n        });\n      }\n    } else {\n      swal.fire({\n        icon: 'error',\n        title: 'Voting failed',\n        text: 'Please Select a Candidate',\n        confirmButtonText: \"OK\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      candidates\n    } = this.state;\n    let dropDown = null;\n    let button = null;\n    let ui = null;\n\n    if (loading && candidates.length == 0) {\n      ui = React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 3000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n\n    if (candidates.length == 0) {\n      ui = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"No candidates to load Kindly add candidate info\");\n    }\n\n    if (candidates.length != 0) {\n      ui = candidates.map(candidate => {\n        return React.createElement(Candidate, {\n          showDetails: this.showDetails,\n          key: candidate.candidate_id,\n          candidate: candidate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n      });\n      dropDown = React.createElement(\"select\", {\n        style: style,\n        onChange: this.handleCandidateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Select Candidate for Vote\"), candidates.map(candidate => React.createElement(\"option\", {\n        key: candidate.candidate_id,\n        value: candidate.candidate_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, candidate.first_name + \" \" + candidate.last_name)));\n      button = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn vote\",\n        onClick: this.vote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Vote\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      id: \"navg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Electronic\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" colorb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Ballot\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/welcome\",\n      className: \"nav-link welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" Welcome\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/welcome\",\n      className: \"nav-link user uname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" Vrushali!\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, dropDown, button, ui));\n  }\n\n} //Export The Main Component\n\n\nexport default Welcome;","map":{"version":3,"sources":["/Users/vrushalij/Desktop/Submission/css_updated/Frontend/src/Welcome.js"],"names":["React","Component","axios","UserStorage","VoterContract","swal","Candidate","Loader","web3","Link","Redirect","style","width","marginLeft","height","marginTop","marginBottom","fontSize","border","borderRight","borderBottom","borderTop","borderLeft","Welcome","constructor","props","showDetails","candidate_id","candidate","state","candidates","filter","history","push","pathname","candidateDetails","max_id","loading","success","username","password","buttonDisabled","handleCandidateChange","bind","vote","doLogout","componentDidMount","response","fetch","method","headers","result","json","console","log","data","countfromdb","count","event","setState","target","value","accounts","eth","getAccounts","defaultAccount","methods","send","from","JSON","stringify","fire","icon","title","text","type","confirmButtonText","render","dropDown","button","ui","length","map","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UserStorage from './stores/UserStorage';\nimport VoterContract from './VoterContract';\nimport swal from \"sweetalert2\";\nimport Candidate from \"./Candidate\";\nimport Loader from \"react-loader-spinner\";\nimport web3 from './web3';\nimport { Link, Redirect } from 'react-router-dom';\nimport './App.css';\n\nconst style = {\n  width: \"30%\",\n  marginLeft: \"0%\",\n  height: \"50px\",\n  marginTop: \"40px\",\n  marginBottom: \"30px\",\n  fontSize: \"20px\",\n  border: \"none\",\n  borderRight: \"solid #2eca6a 3px\",\n  borderBottom: \"solid #2eca6a 3px\",\n  borderTop: \"solid 3px lightgrey\",\n  borderLeft: \"solid 3px lightgrey\",\n};\n\nclass Welcome extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            candidates: [],\n            candidate_id:0,\n            max_id:'',\n            loading: true,\n            success: null,\n            username : '',\n            password : '',\n            buttonDisabled : false\n        }\n        this.handleCandidateChange = this.handleCandidateChange.bind(this);\n        this.vote= this.vote.bind(this);\n      }\n    \n\n    doLogout(){\n        UserStorage.username='';\n        this.props.history.push(\"/Login\");\n    }\n    async componentDidMount(){\n        \n      const response = await fetch('http://localhost:3003/candidateCount', {\n          method: 'get',\n          headers: {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }\n        });\n        \n            let result = await response.json();\n            console.log(\"response data is\", result.data[0]);\n            var countfromdb = result.data[0].count;\n            console.log(\"count is: \"+countfromdb);\n            // var accounts = await web3.eth.getAccounts();\n            // console.log(\"web3\", accounts);\n            // console.log(\"aing: \"+ accounts[0]);\n            // web3.eth.defaultAccount = accounts[0];\n           \n            // const candidates = await VoterContract.methods.getCandidates(count).call();\n            // console.log(\"number of responses: \"+candidates.length)\n            // console.log(\"Got the candidate information from blockchain: \"+ JSON.stringify(candidates[2]));\n\n            // //const candi = await VoterContract.methods.getCandidates(3).call();\n            // let candidates2 = [];\n            \n            // for (let candidate of candidates) {\n            //   if (candidate.id != \"0\") {\n            //     candidates2.push({\n            //       candidate_id: candidate.candidate_id,\n            //       first_name: candidate.first_name,\n            //       last_name: candidate.last_name,\n            //       candidate_info: candidate.candidate_info,\n            //       candidate_desc: candidate.candidate_desc,\n            //       vote_count: candidate.vote_count\n            //     });\n            //   }\n            // }\n            // this.setState({ candidates: candidates2, loading: false });\n           \n      };\n      handleCandidateChange(event) {\n        this.setState({ candidate_id: event.target.value });\n      }\n      showDetails = (candidate_id) => {\n        if (candidate_id) {\n          const candidate = this.state.candidates.filter(\n            (candidate) => candidate.candidate_id === candidate_id\n          );\n          this.props.history.push({\n            pathname: \"/CandidateDetail\",\n            state: { candidateDetails: candidate },\n          });\n        }\n      };\n      async vote() {\n        console.log(this.state.candidate_id);\n        if (this.state.candidate_id !== 0) {\n            var accounts = await web3.eth.getAccounts();\n            console.log(\"web3\", accounts);\n            console.log(\"aing: \"+ accounts[0]);\n            web3.eth.defaultAccount = accounts[0];\n            var result = await VoterContract.methods.vote(this.state.candidate_id).send({from: accounts[0]});\n            console.log(\"result\"+ JSON.stringify(result[0]));\n            if(result[0]== 1){\n              \n                swal.fire({\n                    icon: 'success',\n                    title: \"Voting SuccesFull!\",\n                    text: \"You have succesfully voted your candidate\",\n                    type: \"Success\",\n                    confirmButtonText: \"OK\"\n                  });\n            }else{\n                swal.fire({\n                    icon: 'error',\n                    title: 'Voting failed',\n                    text: 'Vote from this metamask address has already been casted',\n                    confirmButtonText: \"OK\"\n                });\n            }\n        } else {\n            swal.fire({\n                icon: 'error',\n                title: 'Voting failed',\n                text: 'Please Select a Candidate',\n                confirmButtonText: \"OK\"\n            });\n        }\n      }\n\n    render() {\n        const { loading, candidates } = this.state;\n    let dropDown = null;\n    let button = null;\n    let ui = null;\n    if (loading && candidates.length ==0) {\n      ui =   <Loader\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />;\n    }\n    if(candidates.length ==0){\n      ui = <div>No candidates to load Kindly add candidate info</div>\n    }\n    if(candidates.length !=0){\n      ui = candidates.map((candidate) => {\n        return (\n          <Candidate\n            showDetails={this.showDetails}\n            key={candidate.candidate_id}\n            candidate={candidate}\n          />\n        );\n      });\n      \n      dropDown =  (\n        <select style={style} onChange={this.handleCandidateChange}>\n          <option>Select Candidate for Vote</option>\n          {candidates.map((candidate) => (\n            <option key={candidate.candidate_id} value={candidate.candidate_id}>\n              {candidate.first_name + \" \" + candidate.last_name}\n            </option>\n          ))}\n        </select>\n      );\n        button = (\n        <div>\n          <button className=\"btn vote\" onClick={this.vote}>\n            Vote\n          </button>\n        </div>\n      );\n    \n    }\n\n        return ( \n            <div className=\"container\">\n                        <div className= \"header\">\n                        <ul className=\"navbar-nav\" id=\"navg\">\n                           \n                            <li className=\"nav-item\">\n                                <a className=\" brand\">Electronic</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\" colorb\">Ballot</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/welcome\" className=\"nav-link welcome\"> Welcome\n                            </Link>\n                           </li>\n                           {/* <li className=\"nav-item\">\n                                <Link to=\"/AdminLogin\" className=\"nav-link user\"> {this.props.location.state.username}\n                            </Link>\n                           </li> */}\n                           <li className=\"nav-item\">\n                                <Link to=\"/welcome\" className=\"nav-link user uname\"> Vrushali!\n                            </Link>\n                           </li> \n\n                        </ul>\n                    </div>\n                    <div className=\"row\">\n        {dropDown}\n        {button}\n        {ui}\n      </div>\n      </div>\n      ); \n    }\n}\n  //Export The Main Component\n  export default Welcome;"]},"metadata":{},"sourceType":"module"}