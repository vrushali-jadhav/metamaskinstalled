{"ast":null,"code":"var _jsxFileName = \"/home/vrushali/Desktop/BlockchainFinal/metamaskinstalled/Frontend/src/Welcome.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UserStorage from './stores/UserStorage';\nimport VoterContract from './VoterContract';\nimport swal from \"sweetalert2\";\nimport Candidate from \"./Candidate\";\nimport Loader from \"react-loader-spinner\";\nimport web3 from './web3';\nimport { Link, Redirect } from 'react-router-dom';\nimport './App.css';\nconst style = {\n  width: \"30%\",\n  marginLeft: \"0%\",\n  height: \"50px\",\n  marginTop: \"40px\",\n  marginBottom: \"30px\",\n  fontSize: \"20px\",\n  border: \"none\",\n  borderRight: \"solid #2eca6a 3px\",\n  borderBottom: \"solid #2eca6a 3px\",\n  borderTop: \"solid 3px lightgrey\",\n  borderLeft: \"solid 3px lightgrey\"\n};\n\nclass Welcome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showDetails = candidate_id => {\n      if (candidate_id) {\n        const candidate = this.state.candidates.filter(candidate => candidate.candidate_id === candidate_id);\n        this.props.history.push({\n          pathname: \"/CandidateDetail\",\n          state: {\n            candidateDetails: candidate\n          }\n        });\n      }\n    };\n\n    this.state = {\n      candidates: [],\n      candidate_id: 0,\n      max_id: '',\n      loading: true,\n      success: null,\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n    this.handleCandidateChange = this.handleCandidateChange.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  doLogout() {\n    UserStorage.username = '';\n    this.props.history.push(\"/Login\");\n  }\n\n  async componentDidMount() {\n    const responseSettled = await fetch('http://localhost:3003/electionSetteled', {\n      method: 'get',\n      headers: {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    });\n    let resultsEleSet = await responseSettled.json();\n\n    if (resultsEleSet.data[0] != undefined) {\n      swal.fire({\n        icon: 'success',\n        title: \"Results are out!\",\n        text: \"And the winner is: \" + resultsEleSet.data[0].winner,\n        type: \"Success\",\n        confirmButtonText: \"OK\"\n      });\n      this.props.history.push(\"/Login\");\n    }\n\n    const response = await fetch('http://localhost:3003/candidateCount', {\n      method: 'get',\n      headers: {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    });\n    let result = await response.json();\n    console.log(\"Count from DB is\", result.data[0]);\n    var count = result.data[0].count;\n    console.log(\"count is: \" + count);\n    const responseStartFrom = await fetch('http://localhost:3003/getStartFrom', {\n      method: 'get',\n      headers: {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    });\n    let resultStartFrom = await responseStartFrom.json();\n    console.log(\"Startfrom from DB is\", resultStartFrom.data[0]);\n    var startfrom = resultStartFrom.data[0].candidate_id;\n    console.log(\"Startfrom is: \" + startfrom);\n    var accounts = await web3.eth.getAccounts();\n    console.log(\"web3\", accounts);\n    console.log(\"aing: \" + accounts[0]);\n    web3.eth.defaultAccount = accounts[0];\n    let candidates2 = [];\n    var j = 0;\n\n    for (var i = startfrom; i < startfrom + count; i++) {\n      candidates2[j] = await VoterContract.methods.getCandidateInformation(i).call();\n      console.log(\"candidate recieved from blockchain: \" + candidates2[j]);\n      j = j + 1;\n    }\n\n    this.setState({\n      candidates: candidates2,\n      loading: false\n    });\n  }\n\n  handleCandidateChange(event) {\n    this.setState({\n      candidate_id: event.target.value\n    });\n  }\n\n  async vote() {\n    console.log(\"voter id used for storing vote on blockchain: \" + this.state.candidate_id);\n\n    if (this.state.candidate_id !== 0) {\n      let res = await fetch('http://localhost:3003/getVoterId', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.props.location.state.username\n        })\n      });\n      let result2 = await res.json();\n\n      if (result2 && result2.success) {\n        var voterid = result2.voterid;\n        var accounts = await web3.eth.getAccounts();\n        console.log(\"web3\", accounts);\n        console.log(\"aing: \" + accounts[0]);\n        web3.eth.defaultAccount = accounts[0]; //check if user has voted\n\n        const voter = await VoterContract.methods.getVoterInformation(voterid).call();\n        console.log(\"Got the voter from blockchain: \" + voter);\n        var hasvoted = await VoterContract.methods.userVoted(voterid).call();\n        console.log(\"has user voted?: \" + hasvoted);\n\n        if (!hasvoted) {\n          await VoterContract.methods.vote(this.state.candidate_id, voterid).send({\n            from: accounts[0]\n          });\n          swal.fire({\n            icon: 'success',\n            title: \"Voting SuccesFull!\",\n            text: \"You have succesfully voted your candidate\",\n            type: \"Success\",\n            confirmButtonText: \"OK\"\n          });\n        } else {\n          swal.fire({\n            icon: 'error',\n            title: 'Voting failed',\n            text: 'Vote from this metamask address has already been casted',\n            confirmButtonText: \"OK\"\n          });\n        }\n      }\n    } else {\n      swal.fire({\n        icon: 'error',\n        title: 'Voting failed',\n        text: 'Please Select a Candidate',\n        confirmButtonText: \"OK\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      candidates\n    } = this.state;\n    let dropDown = null;\n    let button = null;\n    let ui = null;\n\n    if (loading && candidates.length == 0) {\n      ui = React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 3000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      });\n    }\n\n    if (candidates.length == 0) {\n      ui = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"No candidates to load Kindly add candidate info\");\n    }\n\n    if (candidates.length != 0) {\n      ui = candidates.map(candidate => {\n        return React.createElement(Candidate, {\n          showDetails: this.showDetails,\n          key: candidate.candidate_id,\n          candidate: candidate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        });\n      });\n      dropDown = React.createElement(\"select\", {\n        style: style,\n        onChange: this.handleCandidateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Select Candidate for Vote\"), candidates.map(candidate => React.createElement(\"option\", {\n        key: candidate.candidate_id,\n        value: candidate.candidate_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, candidate.first_name + \" \" + candidate.last_name)));\n      button = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn vote\",\n        onClick: this.vote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Vote\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      id: \"navg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Electronic\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" colorb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Ballot\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/welcome\",\n      className: \"nav-link welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \" Welcome\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/welcome\",\n      className: \"nav-link user uname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \" \", this.props.location.state.username)))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, dropDown, button, ui));\n  }\n\n} //Export The Main Component\n\n\nexport default Welcome;","map":{"version":3,"sources":["/home/vrushali/Desktop/BlockchainFinal/metamaskinstalled/Frontend/src/Welcome.js"],"names":["React","Component","axios","UserStorage","VoterContract","swal","Candidate","Loader","web3","Link","Redirect","style","width","marginLeft","height","marginTop","marginBottom","fontSize","border","borderRight","borderBottom","borderTop","borderLeft","Welcome","constructor","props","showDetails","candidate_id","candidate","state","candidates","filter","history","push","pathname","candidateDetails","max_id","loading","success","username","password","buttonDisabled","handleCandidateChange","bind","vote","doLogout","componentDidMount","responseSettled","fetch","method","headers","resultsEleSet","json","data","undefined","fire","icon","title","text","winner","type","confirmButtonText","response","result","console","log","count","responseStartFrom","resultStartFrom","startfrom","accounts","eth","getAccounts","defaultAccount","candidates2","j","i","methods","getCandidateInformation","call","setState","event","target","value","res","body","JSON","stringify","location","result2","voterid","voter","getVoterInformation","hasvoted","userVoted","send","from","render","dropDown","button","ui","length","map","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UserStorage from './stores/UserStorage';\nimport VoterContract from './VoterContract';\nimport swal from \"sweetalert2\";\nimport Candidate from \"./Candidate\";\nimport Loader from \"react-loader-spinner\";\nimport web3 from './web3';\nimport { Link, Redirect } from 'react-router-dom';\nimport './App.css';\n\nconst style = {\n  width: \"30%\",\n  marginLeft: \"0%\",\n  height: \"50px\",\n  marginTop: \"40px\",\n  marginBottom: \"30px\",\n  fontSize: \"20px\",\n  border: \"none\",\n  borderRight: \"solid #2eca6a 3px\",\n  borderBottom: \"solid #2eca6a 3px\",\n  borderTop: \"solid 3px lightgrey\",\n  borderLeft: \"solid 3px lightgrey\",\n};\n\nclass Welcome extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            candidates: [],\n            candidate_id:0,\n            max_id:'',\n            loading: true,\n            success: null,\n            username : '',\n            password : '',\n            buttonDisabled : false\n        }\n        this.handleCandidateChange = this.handleCandidateChange.bind(this);\n        this.vote= this.vote.bind(this);\n      }\n    \n\n    doLogout(){\n        UserStorage.username='';\n        this.props.history.push(\"/Login\");\n    }\n    async componentDidMount(){\n        const responseSettled = await fetch('http://localhost:3003/electionSetteled', {\n          method: 'get',\n          headers: {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }\n        });\n        \n        let resultsEleSet = await responseSettled.json();\n        \n        if(resultsEleSet.data[0]!=undefined)\n        {\n          swal.fire({\n            icon: 'success',\n            title: \"Results are out!\",\n            text: \"And the winner is: \"+ resultsEleSet.data[0].winner,\n            type: \"Success\",\n            confirmButtonText: \"OK\"\n          });\n          this.props.history.push(\"/Login\");\n        }\n\n        const response = await fetch('http://localhost:3003/candidateCount', {\n          method: 'get',\n          headers: {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }\n        });\n        \n        let result = await response.json();\n        console.log(\"Count from DB is\", result.data[0]);\n        var count = result.data[0].count;\n        console.log(\"count is: \"+count);\n        \n        const responseStartFrom = await fetch('http://localhost:3003/getStartFrom', {\n          method: 'get',\n          headers: {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }\n        });\n\n        let resultStartFrom = await responseStartFrom.json();\n        console.log(\"Startfrom from DB is\", resultStartFrom.data[0]);\n        var startfrom = resultStartFrom.data[0].candidate_id;\n        console.log(\"Startfrom is: \"+startfrom);\n\n        var accounts = await web3.eth.getAccounts();\n        console.log(\"web3\", accounts);\n        console.log(\"aing: \"+ accounts[0]);\n        web3.eth.defaultAccount = accounts[0];\n           \n        let candidates2 = [];\n        var j = 0;\n        for (var i = startfrom; i < startfrom+count; i++) {\n          candidates2[j] = await VoterContract.methods.getCandidateInformation(i).call();\n          console.log(\"candidate recieved from blockchain: \"+candidates2[j]);\n          j = j+1;\n        }\n\n        this.setState({ candidates: candidates2, loading: false });\n           \n      };\n      handleCandidateChange(event) {\n        this.setState({ candidate_id: event.target.value });\n      }\n      showDetails = (candidate_id) => {\n        if (candidate_id) {\n          const candidate = this.state.candidates.filter(\n            (candidate) => candidate.candidate_id === candidate_id\n          );\n          this.props.history.push({\n            pathname: \"/CandidateDetail\",\n            state: { candidateDetails: candidate },\n          });\n        }\n      };\n\n      async vote() {\n        console.log(\"voter id used for storing vote on blockchain: \"+this.state.candidate_id);\n        if (this.state.candidate_id !== 0) {\n          let res = await fetch('http://localhost:3003/getVoterId', {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username: this.props.location.state.username,\n                    })\n                });\n\n                let result2 = await res.json();\n                if (result2 && result2.success){\n                    var voterid = result2.voterid;\n                    \n                        var accounts = await web3.eth.getAccounts();\n                        console.log(\"web3\", accounts);\n                        console.log(\"aing: \"+ accounts[0]);\n                        web3.eth.defaultAccount = accounts[0];\n\n                        //check if user has voted\n                        const voter = await VoterContract.methods.getVoterInformation(voterid).call();\n                        console.log(\"Got the voter from blockchain: \"+voter);\n                        var hasvoted = await VoterContract.methods.userVoted(voterid).call();\n                        console.log(\"has user voted?: \"+hasvoted);\n\n                        if(!hasvoted)\n                        {\n                            await VoterContract.methods.vote(this.state.candidate_id, voterid).send({from: accounts[0]});\n                            \n                            swal.fire({\n                              icon: 'success',\n                              title: \"Voting SuccesFull!\",\n                              text: \"You have succesfully voted your candidate\",\n                              type: \"Success\",\n                              confirmButtonText: \"OK\"\n                            });\n                        }\n                        else{\n                            swal.fire({\n                                icon: 'error',\n                                title: 'Voting failed',\n                                text: 'Vote from this metamask address has already been casted',\n                                confirmButtonText: \"OK\"\n                            });\n                        }\n                }\n        } else {\n            swal.fire({\n                icon: 'error',\n                title: 'Voting failed',\n                text: 'Please Select a Candidate',\n                confirmButtonText: \"OK\"\n            });\n        }\n      }\n\n    render() {\n        const { loading, candidates } = this.state;\n    let dropDown = null;\n    let button = null;\n    let ui = null;\n    if (loading && candidates.length ==0) {\n      ui =   <Loader\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />;\n    }\n    if(candidates.length ==0){\n      ui = <div>No candidates to load Kindly add candidate info</div>\n    }\n    if(candidates.length !=0){\n      ui = candidates.map((candidate) => {\n        return (\n          <Candidate\n            showDetails={this.showDetails}\n            key={candidate.candidate_id}\n            candidate={candidate}\n          />\n        );\n      });\n      \n      dropDown =  (\n        <select style={style} onChange={this.handleCandidateChange}>\n          <option>Select Candidate for Vote</option>\n          {candidates.map((candidate) => (\n            <option key={candidate.candidate_id} value={candidate.candidate_id}>\n              {candidate.first_name + \" \" + candidate.last_name}\n            </option>\n          ))}\n        </select>\n      );\n        button = (\n        <div>\n          <button className=\"btn vote\" onClick={this.vote}>\n            Vote\n          </button>\n        </div>\n      );\n    \n    }\n\n        return ( \n            <div className=\"container\">\n                        <div className= \"header\">\n                        <ul className=\"navbar-nav\" id=\"navg\">\n                            <li className=\"nav-item\">\n                                <a className=\" brand\">Electronic</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\" colorb\">Ballot</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/welcome\" className=\"nav-link welcome\"> Welcome\n                            </Link>\n                           </li>\n                           <li className=\"nav-item\">\n                                <Link to=\"/welcome\" className=\"nav-link user uname\"> {this.props.location.state.username}\n                            </Link>\n                           </li>\n                        </ul>\n                    </div>\n                    <div className=\"row\">\n        {dropDown}\n        {button}\n        {ui}\n      </div>\n      </div>\n      ); \n    }\n}\n  //Export The Main Component\n  export default Welcome;"]},"metadata":{},"sourceType":"module"}