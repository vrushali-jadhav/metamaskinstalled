{"ast":null,"code":"var _jsxFileName = \"/Users/vrushalij/Desktop/Blockchain/HarshUpdated/evoting-react-auth/Frontend/src/TakeRegisterPhoto.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport renderHTML from 'react-render-html';\nimport { Link, Redirect } from 'react-router-dom';\nimport RegisterStorage from \"./stores/RegisterStorage\";\nimport swal from \"sweetalert2\";\nimport './Register.css';\nimport './takephoto.css';\nimport web3 from './web3';\n\nvar CryptoJS = require(\"crypto-js\");\n\nclass TakeRegisterPhoto extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: this.props.location.state.password,\n      username: this.props.location.state.username,\n      fname: this.props.location.state.fname,\n      lname: this.props.location.state.lname,\n      dob: this.props.location.state.dob,\n      gender: this.props.location.state.gender,\n      email: this.props.location.state.email,\n      metaaddress: '',\n      privateKey: '',\n      publicKey: ''\n    };\n    this.captureImage = this.captureImage.bind(this);\n  }\n\n  async captureImage() {\n    if (!this.state.username) return;\n\n    try {\n      // console.log('in capture image ')\n      // var data = {}\n      // data.username= this.state.username\n      // const response = await axios.post('http://localhost:5000/api/register',data)\n      // console.log(\" response.data\" + response)\n      // console.log(\" response.data\" + JSON.stringify(response.data))\n      // let result = response.data.success;\n      // if (result) \n      // {\n      console.log(\"image upload success\");\n      swal.fire({\n        icon: 'success',\n        title: 'Congrats!! Image Taken!',\n        text: 'You have succesfully uploaded your image!',\n        confirmButtonText: \"OK\"\n      }); //create metamask account\n\n      console.log(\"creating an account..\");\n      var responsemeta = await web3.eth.accounts.create(web3.utils.randomHex(32));\n      console.log(responsemeta);\n      this.state.metaaddress = responsemeta.address;\n      console.log(this.state.metaaddress);\n      this.state.privateKey = responsemeta.privateKey;\n      console.log(this.state.privateKey);\n      swal.mixin({\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2', '3']\n      }).queue([{\n        title: 'Step 1',\n        text: 'Your metamask account has been created. Account number: ' + responsemeta.address\n      }, {\n        title: 'Step 2',\n        text: 'Kindly safely save the private key displayed in next step. It is required for login.'\n      }, {\n        title: 'Step 3',\n        text: this.state.privateKey\n      }]).then(result => {\n        if (result.value) {\n          const answers = JSON.stringify(result.value);\n          swal.fire({\n            title: 'All done!',\n            confirmButtonText: 'Lovely!'\n          });\n        }\n      }); //store information in DB\n\n      try {\n        let res = await fetch('http://localhost:3003/voterinfopost', {\n          method: 'post',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            password: this.state.password,\n            username: this.state.username,\n            metamaskaddrss: this.state.metaaddress\n          })\n        });\n        let result = await res.json();\n        console.log(\"response from db: \", result);\n\n        if (result.msg == \"Username already taken\") {\n          swal.fire({\n            icon: 'error',\n            title: 'Username is taken',\n            text: 'Try Again',\n            confirmButtonText: \"OK\"\n          });\n          this.props.history.push(\"/RegisterInfo\");\n        }\n\n        if (result && result.success) {\n          //send information to blockchain\n          console.log(\"Voterid is : \" + result.voterid); //creating fake file\n\n          var featureVector = \"[-0.026053009727038442, 0.15075167000293732, 0.056840124129084874, 0.13072286173701286, 0.031368514124769716, 0.17485265031456948, 0.026036462942138315, -0.15000932678580284, 0.026525200966279954, 0.041824865166563543, 0.023493123591179027, 0.016195070333778858, -0.03132371820800472, -0.11433402203023434, 0.05289670690894127, 0.03668313853442669, -0.009506147522479295, 0.1222660407423973, -0.04868937355233356, -0.04474613660946489, 0.052147776954807344, -0.05275954557582736, -0.02444938982487656, 0.096379489954561, 0.10348723955452442, -0.06408110213465988, -0.1373983906209469, -0.10776561334729194, 0.02894978958182037, 0.0766159513220191, 0.15818112686276437, 0.2281595580279827, -0.05162701521068811, 0.0930608456581831, 0.0970461630821228, 0.0657275614142418, 0.018382330257445574, -0.029534526634961367, 0.04452831541653723, -0.09417276695370674, 0.07738524563610553, -0.12633040219545363, 0.04994632537476718, -0.06905871148221195, 0.019391544435638935, -0.043886448480770925, 0.0927432955801487, 0.021635680759791286, -0.14338846191763877, -0.08279495883733035, 0.07110752122942358, 0.006719377518165857, 0.06898875164799392, -0.09634707495570183, 0.027052232841961087, 0.1137135761976242, -0.06861873772693798, 0.04335911061090883, -0.030104315523058176, -0.03220944156113546, -0.11181822314858436, 0.024334094151854516, 0.05972563771065324, -0.24802100479602815, 0.1731882743537426, 0.11389585822820664, 0.0026230946759460494, -0.09616105115041136, -0.237820887863636, 0.18267094433307648, -0.07186868447810411, 0.05846655703149736, -0.10829842559993268, 0.02567508081032429, -0.02074729474097694, -0.05343594083562493, 0.05554653663188219, 0.019599515942391007, -0.04109618331771344, -0.032753658844158054, -0.07138129595667124, 0.07980808287858963, -0.04745268542319536, -0.062110643214546145, -0.0487545807112474, -0.04590106926392764, -0.031276981900446116, -0.05975009130313993, -0.059101097586099056, 0.12414395444095135, 0.07365519478917122, -0.05549014636315405, -0.008778482545167207, 0.01807546407682821, 0.029356441106647254, 0.09675576031208039, -0.005981170198647305, 0.03289733230601996, 0.03297194209881127, 0.043707616459578276, 0.04224407441914082, -0.02428804671857506, -0.11145847991108894, 0.05473561081569642, 0.053805233801249415, 0.07129376471042632, 0.04562839126447216, -0.04254542816895992, 0.028919321247376503, 0.015321260574855841, -0.11880014650523663, 0.0669758278504014, -0.024308743935544042, -0.0718711955845356, 0.1488288350403309, -0.07876925777643919, -0.04420450812438503, -0.032954031429253516, 0.11168285958468914, 0.12905490383505822, 0.14653940960764886, -0.030435446085466538, 0.033497215113602576, 0.03103744749794714, 0.058833220303058625, 0.09757829710841179, 0.09236186929047108, -0.08559191657230258]\";\n          var voterinfo = {\n            fv: featureVector,\n            password: this.state.password,\n            username: this.state.username,\n            fname: this.props.location.state.fname,\n            lname: this.props.location.state.lname,\n            dob: this.props.location.state.dob,\n            gender: this.props.location.state.gender,\n            id: result.msg\n          };\n          var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(voterinfo), this.state.privateKey);\n          console.log(\"encrypted text 2\", ciphertext.toString()); // var bytes  = CryptoJS.AES.decrypt(ciphertext.toString(), this.state.privateKey);\n          // var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n          // console.log(\"decrypted text\", plaintext);\n          //store ciphertext on blockchain\n\n          this.props.history.push(\"/Login\");\n        } else if (result && result.success === false) {\n          console.log(\"registration failed \");\n          swal.fire({\n            icon: 'error',\n            title: 'Failed to store registration data in database',\n            text: 'Try Again',\n            confirmButtonText: \"OK\"\n          });\n          this.props.history.push(\"/RegisterInfo\");\n        }\n      } catch (e) {} // }\n      // else{\n      //     console.log(\"image upload failed\");\n      // }\n\n    } catch (e) {}\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      id: \"navg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/RegisterInfo\",\n      className: \"nav-link reg\",\n      id: \"log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \" Register\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Login\",\n      className: \"nav-link\",\n      id: \"log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" Login\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Electronic\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" colorb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Ballot\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pitchline\",\n      id: \"pitch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Online election perfection!\"), React.createElement(\"div\", {\n      id: \"about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Our E-Voting solution is here for you.\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"information\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"registerimagever col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"qoutetakephoto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h3\",\n      className: \"since-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \" Helping People Connect\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), \"Since 2020\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Security & Trust\")))), React.createElement(\"div\", {\n      className: \"canvasphoto\",\n      id: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Photo:\"), React.createElement(\"video\", {\n      className: \"videoclass\",\n      id: \"videoForImage\",\n      autoPlay: true,\n      width: \"250px\",\n      height: \"200px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn\",\n      id: \"capture\",\n      onClick: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Capture\"))));\n  }\n\n} //Export The Main Component\n\n\nexport default TakeRegisterPhoto;","map":{"version":3,"sources":["/Users/vrushalij/Desktop/Blockchain/HarshUpdated/evoting-react-auth/Frontend/src/TakeRegisterPhoto.js"],"names":["React","Component","axios","renderHTML","Link","Redirect","RegisterStorage","swal","web3","CryptoJS","require","TakeRegisterPhoto","constructor","props","state","password","location","username","fname","lname","dob","gender","email","metaaddress","privateKey","publicKey","captureImage","bind","console","log","fire","icon","title","text","confirmButtonText","responsemeta","eth","accounts","create","utils","randomHex","address","mixin","showCancelButton","progressSteps","queue","then","result","value","answers","JSON","stringify","res","fetch","method","headers","body","metamaskaddrss","json","msg","history","push","success","voterid","featureVector","voterinfo","fv","id","ciphertext","AES","encrypt","toString","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport renderHTML from 'react-render-html';\nimport { Link, Redirect } from 'react-router-dom';\nimport RegisterStorage from \"./stores/RegisterStorage\";\nimport swal from \"sweetalert2\";\nimport './Register.css';\nimport './takephoto.css';\nimport web3 from './web3';\nvar CryptoJS = require(\"crypto-js\");\n\nclass TakeRegisterPhoto extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: this.props.location.state.password,\n            username:this.props.location.state.username,\n            fname: this.props.location.state.fname,\n            lname: this.props.location.state.lname,\n            dob: this.props.location.state.dob,\n            gender: this.props.location.state.gender,\n            email: this.props.location.state.email,\n            metaaddress: '',\n            privateKey: '',\n            publicKey: ''\n        }\n        this.captureImage = this.captureImage.bind(this)\n    }\n\n    async captureImage() {\n        if (!this.state.username)\n        return;\n\n        try{\n                // console.log('in capture image ')\n                // var data = {}\n                // data.username= this.state.username\n\n                // const response = await axios.post('http://localhost:5000/api/register',data)\n            \n                // console.log(\" response.data\" + response)\n\n                // console.log(\" response.data\" + JSON.stringify(response.data))\n            \n                // let result = response.data.success;\n                \n                    // if (result) \n                    // {\n                        console.log(\"image upload success\");\n                        swal.fire({\n                            icon: 'success',\n                            title: 'Congrats!! Image Taken!',\n                            text: 'You have succesfully uploaded your image!',\n                            confirmButtonText: \"OK\"\n                        });\n\n                        //create metamask account\n                        console.log(\"creating an account..\");\n                        var responsemeta = await web3.eth.accounts.create(web3.utils.randomHex(32));\n                        console.log(responsemeta);\n                        this.state.metaaddress = responsemeta.address;\n                        console.log(this.state.metaaddress);\n                        this.state.privateKey = responsemeta.privateKey;\n                        console.log(this.state.privateKey);\n\n                        swal.mixin({\n                            confirmButtonText: 'Next &rarr;',\n                            showCancelButton: true,\n                            progressSteps: ['1', '2', '3']\n                        }).queue([\n                            {\n                                title: 'Step 1',\n                                text: 'Your metamask account has been created. Account number: ' + responsemeta.address\n                            },\n                            {\n                                title: 'Step 2',\n                                text: 'Kindly safely save the private key displayed in next step. It is required for login.'\n                            },\n                            {\n                                title: 'Step 3',\n                                text: this.state.privateKey\n                            }\n                        ]).then((result) => {\n                            if (result.value) {\n                            const answers = JSON.stringify(result.value)\n                            swal.fire({\n                                title: 'All done!',\n                                confirmButtonText: 'Lovely!'\n                            })\n                            }\n                        })\n\n                        //store information in DB\n                        try {\n                            let res = await fetch('http://localhost:3003/voterinfopost', {\n                                method: 'post',\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify({\n                                    password: this.state.password,\n                                    username:this.state.username,\n                                    metamaskaddrss: this.state.metaaddress\n                                })\n                            });\n                            \n                            let result = await res.json();\n                            console.log(\"response from db: \", result);\n\n                            if(result.msg == \"Username already taken\")\n                            {\n                                swal.fire({\n                                    icon: 'error',\n                                    title: 'Username is taken',\n                                    text: 'Try Again',\n                                    confirmButtonText: \"OK\"\n                                });\n                                this.props.history.push(\"/RegisterInfo\");\n                            }\n\n                            if (result && result.success) {\n                                //send information to blockchain\n                                console.log(\"Voterid is : \"+result.voterid);\n                                //creating fake file\n                                var featureVector = \"[-0.026053009727038442, 0.15075167000293732, 0.056840124129084874, 0.13072286173701286, 0.031368514124769716, 0.17485265031456948, 0.026036462942138315, -0.15000932678580284, 0.026525200966279954, 0.041824865166563543, 0.023493123591179027, 0.016195070333778858, -0.03132371820800472, -0.11433402203023434, 0.05289670690894127, 0.03668313853442669, -0.009506147522479295, 0.1222660407423973, -0.04868937355233356, -0.04474613660946489, 0.052147776954807344, -0.05275954557582736, -0.02444938982487656, 0.096379489954561, 0.10348723955452442, -0.06408110213465988, -0.1373983906209469, -0.10776561334729194, 0.02894978958182037, 0.0766159513220191, 0.15818112686276437, 0.2281595580279827, -0.05162701521068811, 0.0930608456581831, 0.0970461630821228, 0.0657275614142418, 0.018382330257445574, -0.029534526634961367, 0.04452831541653723, -0.09417276695370674, 0.07738524563610553, -0.12633040219545363, 0.04994632537476718, -0.06905871148221195, 0.019391544435638935, -0.043886448480770925, 0.0927432955801487, 0.021635680759791286, -0.14338846191763877, -0.08279495883733035, 0.07110752122942358, 0.006719377518165857, 0.06898875164799392, -0.09634707495570183, 0.027052232841961087, 0.1137135761976242, -0.06861873772693798, 0.04335911061090883, -0.030104315523058176, -0.03220944156113546, -0.11181822314858436, 0.024334094151854516, 0.05972563771065324, -0.24802100479602815, 0.1731882743537426, 0.11389585822820664, 0.0026230946759460494, -0.09616105115041136, -0.237820887863636, 0.18267094433307648, -0.07186868447810411, 0.05846655703149736, -0.10829842559993268, 0.02567508081032429, -0.02074729474097694, -0.05343594083562493, 0.05554653663188219, 0.019599515942391007, -0.04109618331771344, -0.032753658844158054, -0.07138129595667124, 0.07980808287858963, -0.04745268542319536, -0.062110643214546145, -0.0487545807112474, -0.04590106926392764, -0.031276981900446116, -0.05975009130313993, -0.059101097586099056, 0.12414395444095135, 0.07365519478917122, -0.05549014636315405, -0.008778482545167207, 0.01807546407682821, 0.029356441106647254, 0.09675576031208039, -0.005981170198647305, 0.03289733230601996, 0.03297194209881127, 0.043707616459578276, 0.04224407441914082, -0.02428804671857506, -0.11145847991108894, 0.05473561081569642, 0.053805233801249415, 0.07129376471042632, 0.04562839126447216, -0.04254542816895992, 0.028919321247376503, 0.015321260574855841, -0.11880014650523663, 0.0669758278504014, -0.024308743935544042, -0.0718711955845356, 0.1488288350403309, -0.07876925777643919, -0.04420450812438503, -0.032954031429253516, 0.11168285958468914, 0.12905490383505822, 0.14653940960764886, -0.030435446085466538, 0.033497215113602576, 0.03103744749794714, 0.058833220303058625, 0.09757829710841179, 0.09236186929047108, -0.08559191657230258]\";\n                                var voterinfo = {\n                                        fv: featureVector,\n                                        password: this.state.password,\n                                        username: this.state.username,\n                                        fname: this.props.location.state.fname,\n                                        lname: this.props.location.state.lname,\n                                        dob: this.props.location.state.dob,\n                                        gender: this.props.location.state.gender,\n                                        id: result.msg\n                                }\n\n                                var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(voterinfo), this.state.privateKey);\n                                console.log(\"encrypted text 2\", ciphertext.toString());\n\n                                // var bytes  = CryptoJS.AES.decrypt(ciphertext.toString(), this.state.privateKey);\n                                // var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                                // console.log(\"decrypted text\", plaintext);\n\n                                //store ciphertext on blockchain\n\n                                this.props.history.push(\"/Login\");\n                            }\n                \n                            else if (result && result.success === false) {\n                                console.log(\"registration failed \")\n                                swal.fire({\n                                    icon: 'error',\n                                    title: 'Failed to store registration data in database',\n                                    text: 'Try Again',\n                                    confirmButtonText: \"OK\"\n                                });\n                                this.props.history.push(\"/RegisterInfo\");\n                            }\n                        }\n                        catch (e) {\n                \n                        }\n                    // }\n                    // else{\n                    //     console.log(\"image upload failed\");\n                    // }\n                \n        }catch(e){\n\n        }\n    }\n\n    render() {\n      return (\n       \n <div className =\"container\">\n        <div className= \"header\">\n        <ul className=\"navbar-nav\" id=\"navg\">\n                    <li className=\"nav-item\">\n                    <Link to=\"/RegisterInfo\" className=\"nav-link reg\" id=\"log\"> Register\n                    </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                    <Link to=\"/Login\" className=\"nav-link\" id=\"log\"> Login\n                    </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\" brand\">Electronic</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\" colorb\">Ballot</a>\n                    </li>\n                </ul>\n        </div>\n\n    <div className=\"row\">\n        <div className=\"pitchline\" id=\"pitch\">\n            <div id=\"Main\">Online election perfection!</div>\n            <div id=\"about\">Our E-Voting solution is here for you.</div>\n        </div>\n    </div>  \n\n    <div className=\"row\">\n            <div className=\"information\" >\n                <div className=\"registerimagever col-md-6\"></div>\n                <div className=\"qoutetakephoto\">\n                    <div className =\"h3\" className=\"since-title\"> Helping People Connect\n                        <br></br>Since 2020\n                        <p>Security & Trust</p>\n                    </div>\n            </div>\n            </div>\n            <div className=\"canvasphoto\" id=\"canvas\" >\n                    <div>Photo:</div>\n                    <video className=\"videoclass\" id=\"videoForImage\" autoPlay width=\"250px\" height=\"200px\"></video>\n                    <div></div>\n                    <button className=\"btn\" id=\"capture\" onClick={this.captureImage}>Capture</button>\n            </div>\n    </div>\n    </div>   \n      );\n    }\n  }\n  //Export The Main Component\n  export default TakeRegisterPhoto;\n  "]},"metadata":{},"sourceType":"module"}