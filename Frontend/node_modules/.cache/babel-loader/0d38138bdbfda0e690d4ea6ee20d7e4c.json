{"ast":null,"code":"var _jsxFileName = \"/Users/vrushalij/Desktop/Submission/css_updated/Frontend/src/CandidateList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport web3 from './web3';\nimport { Button, Modal } from 'react-bootstrap';\nimport VoterContract from './VoterContract';\nimport './camp.css';\nimport classnames from 'classnames';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport Listing from './Listing';\n\nclass CandidateList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      candidates: [],\n      candidates2: [],\n      first_name: \"\",\n      last_name: \"\",\n      candidate_info: \"\",\n      candidate_desc: \"\",\n      voteCount: \"\",\n      showmodel: false\n    };\n    this.onChange = this.onChange.bind(this); //this.showmodel =this.showmodel(this);\n  }\n\n  showmodel() {\n    this.setState({\n      showmodel: true // profile: this.props.getProfile\n\n    });\n    console.log(this.state.showmodel);\n  }\n\n  doLogout() {\n    //UserStorage.username='';\n    this.props.history.push(\"/Login\");\n  }\n\n  hidemodel() {\n    this.setState({\n      showmodel: false // profile: this.props.getProfile\n\n    });\n  }\n\n  componentDidMount() {\n    //debugger\n    axios.get(`http://localhost:3003/candidatelist`).then(response => {\n      //debugger\n      console.log(\"response.data\", response.data.data); //console.log(response.data.candidates[0]);\n      //console.log(response.data.candidates[1]);\n\n      this.setState({\n        candidates: response.data.data // profile: this.props.getProfile\n\n      });\n      console.log(\"candidates from state\" + this.state.candidates);\n    });\n  }\n\n  onChange(e) {\n    // debugger\n    //    e.preventDefault();\n    // console.log( e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async handleAddCandidate(e) {\n    //  e.preventDefault();\n    try {\n      let res = await fetch('http://localhost:3003/newcandidate', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          candidate_info: this.state.candidate_info,\n          candidate_desc: this.state.candidate_desc,\n          voteCount: 0\n        })\n      });\n      let result = await res.json();\n      console.log(\"response from db: \", result);\n\n      if (result && result.success) {\n        //send information to blockchain\n        console.log(\"Voterid is : \" + result.candidate_id); //creating fake file\n\n        var id = result.candidate_id;\n        var firstname = this.state.first_name;\n        var lastname = this.state.last_name;\n        var info = this.state.candidate_info;\n        var desc = this.state.candidate_desc;\n        var voteCount = 0;\n        var accounts = await web3.eth.getAccounts();\n        console.log(\"web3\", accounts);\n        console.log(\"aing: \" + accounts[0]);\n        web3.eth.defaultAccount = accounts[0];\n        console.log(id); //console.log(candidatedetails);\n        //debugger\n\n        await VoterContract.methods.addCandidate(id, firstname.toString(), lastname.toString(), info.toString(), desc.toString()).send({\n          from: accounts[0]\n        }); //await VoterContract.methods.addCandidate(1,\"harsh\",\"agrawal\",\"hello\",\"hello\").send({from: accounts[0]});\n        // //debugger\n\n        console.log(\"Candidate Stored on blockchain..\");\n        const candidate = await VoterContract.methods.getCandidateInformation(id).call();\n        console.log(\"Got the candidate information from blockchain: \" + candidate); //document.getElementById('addcandidate-close').click()\n\n        this.hidemodel();\n        swal.fire({\n          icon: 'success',\n          title: 'Congratulations!',\n          text: 'Candidate stored on blockchain',\n          confirmButtonText: \"OK\"\n        }).then(result => {\n          if (result.value) {\n            window.location.reload();\n          }\n        });\n        this.props.history.push(\"/candidatelist\");\n      } else if (result && result.success === false) {\n        console.log(\"Add candidate failed \");\n        swal.fire({\n          icon: 'error',\n          title: 'Failed to store candidate data in database',\n          text: 'Try Again',\n          confirmButtonText: \"OK\"\n        });\n        this.props.history.push(\"/adminlogin\");\n      }\n    } catch (e) {} //await this.props.handleAddEducation(newprofile);\n\n  }\n\n  render() {\n    //debugger\n    const columnClasses = classnames('column', 'col-4', 'col-xs-12');\n    const cardClasses = classnames('card');\n    let loopcandidate = this.state.candidates.map((candidate1, i) => {\n      return React.createElement(\"div\", {\n        className: \"coloumns\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: columnClasses,\n        style: {\n          margin: '10px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"profileimg\",\n        src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n        alt: \"avatar\",\n        style: {\n          width: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, candidate1.first_name, \" \", candidate1.last_name), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, candidate1.candidate_info), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, candidate1.candidate_desc)), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), \"Running For President\")))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.showmodel,\n      onHide: () => this.hidemodel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Add Candidate\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      className: \"profileinput\",\n      placeholder: \"Ex: Donald \",\n      name: \"first_name\",\n      value: this.state.first_name,\n      onChange: this.onChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      className: \"profileinput\",\n      placeholder: \"Ex: Trump\",\n      name: \"last_name\",\n      value: this.state.last_name,\n      onChange: this.onChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Candidate Info\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      required: true,\n      className: \"profileinput\",\n      placeholder: \"Ex: Previous Senate\",\n      name: \"candidate_info\",\n      type: \"text\",\n      value: this.state.candidate_info,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \" Candidate Description\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      required: true,\n      className: \"profileinput\",\n      placeholder: \"Ex: Will bring jobs for American\",\n      name: \"candidate_desc\",\n      value: this.state.candidate_desc,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"rg\",\n      id: \"rg\",\n      onClick: () => this.handleAddCandidate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      id: \"navg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \" brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Electronic\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"colorb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Ballot\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"nav-link admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Logout\")))), React.createElement(\"section\", {\n      className: \"mycard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"applicantheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"setcamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"camp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Presidential Elections 2020\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"campb\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addcandidate\",\n      onClick: () => this.showmodel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Add Candidates \")))), React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, loopcandidate))));\n  }\n\n} //Export The Main Component\n\n\nexport default CandidateList;","map":{"version":3,"sources":["/Users/vrushalij/Desktop/Submission/css_updated/Frontend/src/CandidateList.js"],"names":["React","Component","axios","swal","web3","Button","Modal","VoterContract","classnames","Card","Icon","Image","Listing","CandidateList","constructor","props","state","candidates","candidates2","first_name","last_name","candidate_info","candidate_desc","voteCount","showmodel","onChange","bind","setState","console","log","doLogout","history","push","hidemodel","componentDidMount","get","then","response","data","e","target","name","value","handleAddCandidate","res","fetch","method","headers","body","JSON","stringify","result","json","success","candidate_id","id","firstname","lastname","info","desc","accounts","eth","getAccounts","defaultAccount","methods","addCandidate","toString","send","from","candidate","getCandidateInformation","call","fire","icon","title","text","confirmButtonText","window","location","reload","render","columnClasses","cardClasses","loopcandidate","map","candidate1","i","margin","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport web3 from './web3';\nimport { Button, Modal } from 'react-bootstrap';\nimport VoterContract from './VoterContract';\nimport './camp.css';\nimport classnames from 'classnames'\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport Listing from './Listing';\n\nclass CandidateList extends Component {\n    constructor(props){\n    super(props);\n    this.state= {\n        candidates:[],\n        candidates2:[],\n        first_name:\"\",\n        last_name:\"\",\n        candidate_info:\"\",\n        candidate_desc:\"\",\n        voteCount:\"\",\n        showmodel:false\n    };\n   this.onChange = this.onChange.bind(this);\n    //this.showmodel =this.showmodel(this);\n}\nshowmodel(){\n    this.setState({\n        showmodel: true\n        // profile: this.props.getProfile\n    });\n    console.log(this.state.showmodel);\n}\n\ndoLogout(){\n    //UserStorage.username='';\n    this.props.history.push(\"/Login\");\n}\n\nhidemodel(){\n    this.setState({\n        showmodel: false\n        // profile: this.props.getProfile\n    });\n}\n     componentDidMount(){\n        //debugger\n\n         axios.get(`http://localhost:3003/candidatelist`)\n        .then((response) => {\n            //debugger\n            console.log(\"response.data\", response.data.data);\n            //console.log(response.data.candidates[0]);\n            //console.log(response.data.candidates[1]);\n            \n            this.setState({\n                candidates: response.data.data,\n                // profile: this.props.getProfile\n            });\n            console.log(\"candidates from state\"+ this.state.candidates);\n            \n        });\n        \n    }\n\n    onChange(e) {\n        // debugger\n    //    e.preventDefault();\n    // console.log( e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n    }\n\n    async handleAddCandidate(e){\n        //  e.preventDefault();\n    try {\n        let res = await fetch('http://localhost:3003/newcandidate', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                first_name:this.state.first_name,\n                last_name:this.state.last_name,\n                candidate_info:this.state.candidate_info,\n                candidate_desc:this.state.candidate_desc,\n                voteCount:0\n            })\n        });\n        \n        let result = await res.json();\n        console.log(\"response from db: \", result);\n\n        if (result && result.success) {\n            //send information to blockchain\n            console.log(\"Voterid is : \"+result.candidate_id);\n            //creating fake file\n             \n                var id = result.candidate_id;\n                var firstname= this.state.first_name;\n                var lastname =this.state.last_name;\n                var info=this.state.candidate_info;\n                var desc=this.state.candidate_desc;\n                var voteCount=0\n           \n\n            var accounts = await web3.eth.getAccounts();\n            console.log(\"web3\", accounts);\n            console.log(\"aing: \"+ accounts[0]);\n            web3.eth.defaultAccount = accounts[0];\n            console.log(id);\n            //console.log(candidatedetails);\n            //debugger\n            await VoterContract.methods.addCandidate(id, firstname.toString(),lastname.toString(),\n             info.toString(),desc.toString()).send({from: accounts[0]});\n            //await VoterContract.methods.addCandidate(1,\"harsh\",\"agrawal\",\"hello\",\"hello\").send({from: accounts[0]});\n            // //debugger\n            console.log(\"Candidate Stored on blockchain..\");\n            const candidate = await VoterContract.methods.getCandidateInformation(id).call();\n            console.log(\"Got the candidate information from blockchain: \"+candidate);\n            //document.getElementById('addcandidate-close').click()\n            this.hidemodel();\n\n            swal.fire({\n                icon: 'success',\n                title: 'Congratulations!',\n                text: 'Candidate stored on blockchain',\n                confirmButtonText: \"OK\"\n            }).then((result) => {\n                if (result.value) {\n                    window.location.reload();\n                }\n              })\n         \n            this.props.history.push(\"/candidatelist\");\n        }\n\n        else if (result && result.success === false) {\n            console.log(\"Add candidate failed \")\n            swal.fire({\n                icon: 'error',\n                title: 'Failed to store candidate data in database',\n                text: 'Try Again',\n                confirmButtonText: \"OK\"\n            });\n\n            this.props.history.push(\"/adminlogin\");\n        }\n    }\n    catch (e) {\n\n    }\n        //await this.props.handleAddEducation(newprofile);\n    }\n    \n    render() {\n        //debugger\n        const columnClasses = classnames('column', 'col-4', 'col-xs-12')\n        const cardClasses = classnames('card')\n\n        let loopcandidate = this.state.candidates.map((candidate1, i) => {\n            return (\n\n        <div className=\"coloumns\" key={i}>\n            <div className={columnClasses} style={{ margin: '10px 0' }}>\n                    <Card>\n                        {/*  <Image alt=\"avatar\" className =\"candidatePhoto\"src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false} style={{ height: \"100px\", width: \"200px\"}}>\n                        {/* <Transformation height=\"500\" width=\"500\" crop=\"fill\" /> */}\n                        {/* </Image> */}\n\n                        <div >\n                         <img className=\"profileimg\" src='https://react.semantic-ui.com/images/avatar/large/matthew.png' alt=\"avatar\" style={{width:'200px'}} />\n                         <span ></span>\n                                                \n                         </div>\n                        <Card.Content>\n                            <Card.Header>{candidate1.first_name} {candidate1.last_name}</Card.Header>\n                            <Card.Meta>\n                            {candidate1.candidate_info}\n                                {/* <span className='date'>Joined in 2015</span> */}\n                            </Card.Meta>\n                            <Card.Description>\n                            {candidate1.candidate_desc}\n                        </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <a>\n                                <Icon name='user' />\n                            Running For President\n                            </a>\n                        </Card.Content>\n                    </Card>\n                    </div>\n\n\n\n                    \n                    {/* <div className={columnClasses} style={{ margin: '1rem 0' }}>\n                        <div className={cardClasses}>\n                            <div className=\"card-image\">\n                            </div>\n                            <div className=\"card-header\">\n                                <div className=\"card-title h5 \"><a className=\"detailTitle\" > Candidate Name : </a>{candidate1.first_name} {candidate1.last_name}</div>\n                                <div className=\"card-title h6\">{candidate1.candidate_info}</div>\n                            </div>\n                            <div className=\"card-body\">{candidate1.candidate_desc}</div>\n                            <div className=\"card-footer\">\n                            </div>\n                        </div>\n                    </div> */}\n\n\n                     {/* <div className=\"camptitle\">\n                        <div className=\"h3 titlemessage\" id=\"camptitle2\">\n                        <a className =\"detailTitle\" > Candidate Name : </a> {candidate1.first_name} {candidate1.last_name}\n                        </div>\n                        </div>\n                        <div>\n                        <br></br>         \n                        <br></br> \n                        <a className =\"detailTitle\" >Candidate Info :</a> {candidate1.candidate_info}\n                         <br></br>     \n                         <br></br>   \n                         <a className =\"detailTitle\" >Candidate Description :</a> {candidate1.candidate_desc}\n                        <br></br>     \n                        <br></br>     \n                        <br></br>     \n                        <br></br>   \n                        </div> */}\n                        {/* </div> */}\n\n                    {/* </div> */}\n                   \n                </div>\n            )\n        })\n        return (\n            <div>\n              \n <Modal show={this.state.showmodel} onHide={() => this.hidemodel()}>\n                <Modal.Header closeButton>\n                <Modal.Title>Add Candidate</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n        \n                <div className=\"row\">\n                    <div >\n                        <div >\n                            <label >\n                                First Name\n                                </label>\n                            <div>\n                                <input required className=\"profileinput\" placeholder=\"Ex: Donald \"name= \"first_name\" \n                                value={this.state.first_name} onChange={this.onChange} type=\"text\" />\n                            </div>\n                        </div>\n                        <div >\n                            <label >\n                                Last Name\n                                </label>\n                            <div>\n                                <input required className=\"profileinput\" placeholder=\"Ex: Trump\" name= \"last_name\" \n                                value={this.state.last_name} onChange={this.onChange}type=\"text\" />\n                            </div>\n                        </div>\n                        <div >\n                            <label >\n                                Candidate Info\n                        </label>\n                            <br></br>\n                            <input required className=\"profileinput\" placeholder=\"Ex: Previous Senate\" name =\"candidate_info\" \n                            type=\"text\" value={this.state.candidate_info} onChange={this.onChange} />\n                        </div>\n                        <div>\n                            <label> Candidate Description</label>\n                            <br></br>\n                            <textarea required className=\"profileinput\"  placeholder=\"Ex: Will bring jobs for American\" name = \"candidate_desc\" \n                            value={this.state.candidate_desc} onChange={this.onChange}  >\n                            </textarea>\n\n                        </div>\n                    </div>\n                </div>\n                </Modal.Body>\n          \n                <Modal.Footer>\n                <button className=\"rg\" id=\"rg\" onClick={() => this.handleAddCandidate()}>Add</button>\n                   \n                </Modal.Footer>\n                </Modal> \n\n\n\n            <div className=\"container\">\n            <div className= \"header\">\n                        <ul className=\"navbar-nav\" id=\"navg\">\n                           \n                            <li className=\"nav-item\">\n                                <a className=\" brand\">Electronic</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"colorb\">Ballot</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link admin\">Logout</a>\n                            </li>\n                        </ul>\n                        {/* <hr/> */}\n                    </div>\n\n                <section className=\"mycard\">\n\n                    <header className=\"applicantheader\">\n                    <ul id=\"setcamp\">\n                    <li className=\"nav-item\">\n                        <h3 className=\"camp\" >\n                            Presidential Elections 2020 \n                        </h3>\n                        </li>\n                        <li className=\"nav-item\">\n                        <button className=\"campb\" type=\"button\" data-toggle=\"modal\" data-target=\"#addcandidate\" onClick={() => this.showmodel()} >Add Candidates </button>\n                       </li>\n                        </ul>\n                    </header>\n                    <div className=\"columns\">\n{/* \n                    {this.state.candidates.map(candidate => (\n                <Listing listing={candidate} key={candidate.candidate_id} />\n  ))} */}\n                        {loopcandidate}\n                    </div>\n\n                </section>\n\n            </div>\n            {/* {this.Example} */}\n       \n</div>\n\n\n        );\n    }\n}\n\n//Export The Main Component\nexport default CandidateList;"]},"metadata":{},"sourceType":"module"}