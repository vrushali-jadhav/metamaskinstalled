{"ast":null,"code":"var net = require('net');\n\nvar hasGrowl = false;\n\nmodule.exports = function (growlConfig, cb) {\n  if (typeof cb === 'undefined') {\n    cb = growlConfig;\n    growlConfig = {};\n  }\n\n  if (hasGrowl) return cb(null, hasGrowl);\n  var port = growlConfig.port || 23053;\n  var host = growlConfig.host || 'localhost';\n  var socket = net.connect(port, host);\n  socket.setTimeout(100);\n  socket.on('connect', function () {\n    socket.end();\n    cb(null, true);\n  });\n  socket.on('error', function () {\n    socket.end();\n    cb(null, false);\n  });\n};","map":{"version":3,"sources":["/home/vrushali/Desktop/BlockchainFinal/metamaskinstalled/Frontend/node_modules/node-notifier/lib/checkGrowl.js"],"names":["net","require","hasGrowl","module","exports","growlConfig","cb","port","host","socket","connect","setTimeout","on","end"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AAEA,IAAIC,QAAQ,GAAG,KAAf;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,WAAT,EAAsBC,EAAtB,EAA0B;AACzC,MAAI,OAAOA,EAAP,KAAc,WAAlB,EAA+B;AAC7BA,IAAAA,EAAE,GAAGD,WAAL;AACAA,IAAAA,WAAW,GAAG,EAAd;AACD;;AACD,MAAIH,QAAJ,EAAc,OAAOI,EAAE,CAAC,IAAD,EAAOJ,QAAP,CAAT;AACd,MAAIK,IAAI,GAAGF,WAAW,CAACE,IAAZ,IAAoB,KAA/B;AACA,MAAIC,IAAI,GAAGH,WAAW,CAACG,IAAZ,IAAoB,WAA/B;AACA,MAAIC,MAAM,GAAGT,GAAG,CAACU,OAAJ,CAAYH,IAAZ,EAAkBC,IAAlB,CAAb;AACAC,EAAAA,MAAM,CAACE,UAAP,CAAkB,GAAlB;AAEAF,EAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqB,YAAW;AAC9BH,IAAAA,MAAM,CAACI,GAAP;AACAP,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACD,GAHD;AAKAG,EAAAA,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BH,IAAAA,MAAM,CAACI,GAAP;AACAP,IAAAA,EAAE,CAAC,IAAD,EAAO,KAAP,CAAF;AACD,GAHD;AAID,CApBD","sourcesContent":["var net = require('net');\n\nvar hasGrowl = false;\nmodule.exports = function(growlConfig, cb) {\n  if (typeof cb === 'undefined') {\n    cb = growlConfig;\n    growlConfig = {};\n  }\n  if (hasGrowl) return cb(null, hasGrowl);\n  var port = growlConfig.port || 23053;\n  var host = growlConfig.host || 'localhost';\n  var socket = net.connect(port, host);\n  socket.setTimeout(100);\n\n  socket.on('connect', function() {\n    socket.end();\n    cb(null, true);\n  });\n\n  socket.on('error', function() {\n    socket.end();\n    cb(null, false);\n  });\n};\n"]},"metadata":{},"sourceType":"script"}