{"ast":null,"code":"/**\n * Wrapper for the toaster (https://github.com/nels-o/toaster)\n */\nvar path = require('path');\n\nvar notifier = path.resolve(__dirname, '../vendor/snoreToast/snoretoast');\n\nvar utils = require('../lib/utils');\n\nvar Balloon = require('./balloon');\n\nvar os = require('os');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar util = require('util');\n\nvar fallback;\nmodule.exports = WindowsToaster;\n\nfunction WindowsToaster(options) {\n  options = utils.clone(options || {});\n\n  if (!(this instanceof WindowsToaster)) {\n    return new WindowsToaster(options);\n  }\n\n  this.options = options;\n  EventEmitter.call(this);\n}\n\nutil.inherits(WindowsToaster, EventEmitter);\n\nfunction noop() {}\n\nvar timeoutMessage = 'the toast has timed out';\nvar successMessage = 'user clicked on the toast';\n\nfunction hasText(str, txt) {\n  return str && str.indexOf(txt) !== -1;\n}\n\nWindowsToaster.prototype.notify = function (options, callback) {\n  options = utils.clone(options || {});\n  callback = callback || noop;\n  var is64Bit = os.arch() === 'x64';\n\n  if (typeof options === 'string') {\n    options = {\n      title: 'node-notifier',\n      message: options\n    };\n  }\n\n  if (typeof callback !== 'function') {\n    throw new TypeError('The second argument must be a function callback. You have passed ' + typeof fn);\n  }\n\n  var actionJackedCallback = utils.actionJackerDecorator(this, options, function cb(err, data) {\n    /* Possible exit statuses from SnoreToast, we only want to include err if it's -1 code\n    Exit Status     :  Exit Code\n    Failed          : -1\n     Success         :  0\n    Hidden          :  1\n    Dismissed       :  2\n    TimedOut        :  3\n    ButtonPressed   :  4\n    TextEntered     :  5\n    */\n    if (err && err.code !== -1) {\n      return callback(null, data);\n    }\n\n    callback(err, data);\n  }, function mapper(data) {\n    if (hasText(data, successMessage)) {\n      return 'click';\n    }\n\n    if (hasText(data, timeoutMessage)) {\n      return 'timeout';\n    }\n\n    return false;\n  });\n  options.title = options.title || 'Node Notification:';\n\n  if (typeof options.message === 'undefined' && typeof options.close === 'undefined') {\n    callback(new Error('Message or ID to close is required.'));\n    return this;\n  }\n\n  if (!utils.isWin8() && !utils.isWSL() && !!this.options.withFallback) {\n    fallback = fallback || new Balloon(this.options);\n    return fallback.notify(options, callback);\n  }\n\n  options = utils.mapToWin8(options);\n  var argsList = utils.constructArgumentList(options, {\n    explicitTrue: true,\n    wrapper: '',\n    keepNewlines: true,\n    noEscape: true\n  });\n  var notifierWithArch = notifier + '-x' + (is64Bit ? '64' : '86') + '.exe';\n  utils.fileCommand(this.options.customPath || notifierWithArch, argsList, actionJackedCallback);\n  return this;\n};","map":{"version":3,"sources":["/home/vrushali/Desktop/BlockchainFinal/metamaskinstalled/Frontend/node_modules/node-notifier/notifiers/toaster.js"],"names":["path","require","notifier","resolve","__dirname","utils","Balloon","os","EventEmitter","util","fallback","module","exports","WindowsToaster","options","clone","call","inherits","noop","timeoutMessage","successMessage","hasText","str","txt","indexOf","prototype","notify","callback","is64Bit","arch","title","message","TypeError","fn","actionJackedCallback","actionJackerDecorator","cb","err","data","code","mapper","close","Error","isWin8","isWSL","withFallback","mapToWin8","argsList","constructArgumentList","explicitTrue","wrapper","keepNewlines","noEscape","notifierWithArch","fileCommand","customPath"],"mappings":"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","sourcesContent":["/**\n * Wrapper for the toaster (https://github.com/nels-o/toaster)\n */\nvar path = require('path');\nvar notifier = path.resolve(__dirname, '../vendor/snoreToast/snoretoast');\nvar utils = require('../lib/utils');\nvar Balloon = require('./balloon');\nvar os = require('os');\n\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nvar fallback;\n\nmodule.exports = WindowsToaster;\n\nfunction WindowsToaster(options) {\n  options = utils.clone(options || {});\n  if (!(this instanceof WindowsToaster)) {\n    return new WindowsToaster(options);\n  }\n\n  this.options = options;\n\n  EventEmitter.call(this);\n}\nutil.inherits(WindowsToaster, EventEmitter);\n\nfunction noop() {}\n\nvar timeoutMessage = 'the toast has timed out';\nvar successMessage = 'user clicked on the toast';\n\nfunction hasText(str, txt) {\n  return str && str.indexOf(txt) !== -1;\n}\n\nWindowsToaster.prototype.notify = function(options, callback) {\n  options = utils.clone(options || {});\n  callback = callback || noop;\n  var is64Bit = os.arch() === 'x64';\n\n  if (typeof options === 'string') {\n    options = { title: 'node-notifier', message: options };\n  }\n\n  if (typeof callback !== 'function') {\n    throw new TypeError(\n      'The second argument must be a function callback. You have passed ' +\n        typeof fn\n    );\n  }\n\n  var actionJackedCallback = utils.actionJackerDecorator(\n    this,\n    options,\n    function cb(err, data) {\n      /* Possible exit statuses from SnoreToast, we only want to include err if it's -1 code\n      Exit Status     :  Exit Code\n      Failed          : -1\n\n      Success         :  0\n      Hidden          :  1\n      Dismissed       :  2\n      TimedOut        :  3\n      ButtonPressed   :  4\n      TextEntered     :  5\n      */\n      if (err && err.code !== -1) {\n        return callback(null, data);\n      }\n      callback(err, data);\n    },\n    function mapper(data) {\n      if (hasText(data, successMessage)) {\n        return 'click';\n      }\n      if (hasText(data, timeoutMessage)) {\n        return 'timeout';\n      }\n      return false;\n    }\n  );\n\n  options.title = options.title || 'Node Notification:';\n  if (\n    typeof options.message === 'undefined' &&\n    typeof options.close === 'undefined'\n  ) {\n    callback(new Error('Message or ID to close is required.'));\n    return this;\n  }\n\n  if (!utils.isWin8() && !utils.isWSL() && !!this.options.withFallback) {\n    fallback = fallback || new Balloon(this.options);\n    return fallback.notify(options, callback);\n  }\n\n  options = utils.mapToWin8(options);\n  var argsList = utils.constructArgumentList(options, {\n    explicitTrue: true,\n    wrapper: '',\n    keepNewlines: true,\n    noEscape: true\n  });\n\n  var notifierWithArch = notifier + '-x' + (is64Bit ? '64' : '86') + '.exe';\n  utils.fileCommand(\n    this.options.customPath || notifierWithArch,\n    argsList,\n    actionJackedCallback\n  );\n  return this;\n};\n"]},"metadata":{},"sourceType":"script"}