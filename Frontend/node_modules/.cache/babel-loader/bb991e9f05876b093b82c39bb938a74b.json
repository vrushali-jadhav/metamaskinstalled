{"ast":null,"code":"/**\n * A Node.js wrapper for terminal-notify (with fallback).\n */\nvar utils = require('../lib/utils');\n\nvar Growl = require('./growl');\n\nvar path = require('path');\n\nvar notifier = path.join(__dirname, '../vendor/mac.noindex/terminal-notifier.app/Contents/MacOS/terminal-notifier');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar util = require('util');\n\nvar errorMessageOsX = 'You need Mac OS X 10.8 or above to use NotificationCenter,' + ' or use Growl fallback with constructor option {withFallback: true}.';\nmodule.exports = NotificationCenter;\n\nfunction NotificationCenter(options) {\n  options = utils.clone(options || {});\n\n  if (!(this instanceof NotificationCenter)) {\n    return new NotificationCenter(options);\n  }\n\n  this.options = options;\n  EventEmitter.call(this);\n}\n\nutil.inherits(NotificationCenter, EventEmitter);\nvar activeId = null;\n\nfunction noop() {}\n\nNotificationCenter.prototype.notify = function (options, callback) {\n  var fallbackNotifier;\n  var id = identificator();\n  options = utils.clone(options || {});\n  activeId = id;\n\n  if (typeof options === 'string') {\n    options = {\n      title: 'node-notifier',\n      message: options\n    };\n  }\n\n  callback = callback || noop;\n\n  if (typeof callback !== 'function') {\n    throw new TypeError('The second argument must be a function callback. You have passed ' + typeof fn);\n  }\n\n  var actionJackedCallback = utils.actionJackerDecorator(this, options, callback, function (data) {\n    if (activeId !== id) return false;\n\n    if (data === 'activate') {\n      return 'click';\n    }\n\n    if (data === 'timeout') {\n      return 'timeout';\n    }\n\n    if (data === 'replied') {\n      return 'replied';\n    }\n\n    return false;\n  });\n  options = utils.mapToMac(options);\n\n  if (!options.message && !options.group && !options.list && !options.remove) {\n    callback(new Error('Message, group, remove or list property is required.'));\n    return this;\n  }\n\n  var argsList = utils.constructArgumentList(options);\n\n  if (utils.isMountainLion()) {\n    utils.fileCommandJson(this.options.customPath || notifier, argsList, actionJackedCallback);\n    return this;\n  }\n\n  if (fallbackNotifier || !!this.options.withFallback) {\n    fallbackNotifier = fallbackNotifier || new Growl(this.options);\n    return fallbackNotifier.notify(options, callback);\n  }\n\n  callback(new Error(errorMessageOsX));\n  return this;\n};\n\nfunction identificator() {\n  return {\n    _ref: 'val'\n  };\n}","map":{"version":3,"sources":["/Users/vrushalij/Desktop/Blockchain/HarshUpdated/evoting-react-auth/Frontend/node_modules/node-notifier/notifiers/notificationcenter.js"],"names":["utils","require","Growl","path","notifier","join","__dirname","EventEmitter","util","errorMessageOsX","module","exports","NotificationCenter","options","clone","call","inherits","activeId","noop","prototype","notify","callback","fallbackNotifier","id","identificator","title","message","TypeError","fn","actionJackedCallback","actionJackerDecorator","data","mapToMac","group","list","remove","Error","argsList","constructArgumentList","isMountainLion","fileCommandJson","customPath","withFallback","_ref"],"mappings":"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","sourcesContent":["/**\n * A Node.js wrapper for terminal-notify (with fallback).\n */\nvar utils = require('../lib/utils');\nvar Growl = require('./growl');\nvar path = require('path');\nvar notifier = path.join(\n  __dirname,\n  '../vendor/mac.noindex/terminal-notifier.app/Contents/MacOS/terminal-notifier'\n);\n\nvar EventEmitter = require('events').EventEmitter;\nvar util = require('util');\n\nvar errorMessageOsX =\n  'You need Mac OS X 10.8 or above to use NotificationCenter,' +\n  ' or use Growl fallback with constructor option {withFallback: true}.';\n\nmodule.exports = NotificationCenter;\n\nfunction NotificationCenter(options) {\n  options = utils.clone(options || {});\n  if (!(this instanceof NotificationCenter)) {\n    return new NotificationCenter(options);\n  }\n  this.options = options;\n\n  EventEmitter.call(this);\n}\nutil.inherits(NotificationCenter, EventEmitter);\nvar activeId = null;\n\nfunction noop() {}\nNotificationCenter.prototype.notify = function(options, callback) {\n  var fallbackNotifier;\n  var id = identificator();\n  options = utils.clone(options || {});\n  activeId = id;\n\n  if (typeof options === 'string') {\n    options = { title: 'node-notifier', message: options };\n  }\n  callback = callback || noop;\n\n  if (typeof callback !== 'function') {\n    throw new TypeError(\n      'The second argument must be a function callback. You have passed ' +\n        typeof fn\n    );\n  }\n\n  var actionJackedCallback = utils.actionJackerDecorator(\n    this,\n    options,\n    callback,\n    function(data) {\n      if (activeId !== id) return false;\n\n      if (data === 'activate') {\n        return 'click';\n      }\n      if (data === 'timeout') {\n        return 'timeout';\n      }\n      if (data === 'replied') {\n        return 'replied';\n      }\n      return false;\n    }\n  );\n\n  options = utils.mapToMac(options);\n\n  if (!options.message && !options.group && !options.list && !options.remove) {\n    callback(new Error('Message, group, remove or list property is required.'));\n    return this;\n  }\n\n  var argsList = utils.constructArgumentList(options);\n  if (utils.isMountainLion()) {\n    utils.fileCommandJson(\n      this.options.customPath || notifier,\n      argsList,\n      actionJackedCallback\n    );\n    return this;\n  }\n\n  if (fallbackNotifier || !!this.options.withFallback) {\n    fallbackNotifier = fallbackNotifier || new Growl(this.options);\n    return fallbackNotifier.notify(options, callback);\n  }\n\n  callback(new Error(errorMessageOsX));\n  return this;\n};\n\nfunction identificator() {\n  return { _ref: 'val' };\n}\n"]},"metadata":{},"sourceType":"script"}